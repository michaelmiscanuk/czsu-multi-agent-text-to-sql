[project]
name = "czsu-multi-agent-text-to-sql"
version = "0.1.0"
description = "A prototype project for Text to SQL app working in LangGraph and allowing to  query CZSU (Czech Statistical Office) publicly available data using natural language."
readme = "README.md"
requires-python = ">=3.10"
authors = [ { name = "Michael Miscanuk Name", email = "michael.miscanuk@gmail.com" } ]

# Core API and FastAPI
# Database: PostgreSQL, SQLAlchemy, asyncpg, psycopg
# Data processing: pandas, numpy, openpyxl, pyjstat, tqdm
# PDF processing: llama-parse (LlamaParse only)
# ML/AI: langchain ecosystem, openai, chromadb, cohere
# Utilities: requests, httpx, python-dotenv, aiofiles, psutil
# Serialization/Parsing: PyYAML, orjson, Jinja2
# Auth/Security: authlib, PyJWT, python-jose
# MCP: mcp

dependencies = [
    # Core API and FastAPI
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "starlette==0.45.3",
    "python-multipart>=0.0.6",
    
    # Pydantic for data validation
    "pydantic>=2.5.0",
    "pydantic-settings==2.9.1",
    "pydantic_core==2.33.2",
    
    # LangChain ecosystem (core)
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-openai>=0.0.2",
    "langchain-chroma==0.2.4",
    "langchain-community>=0.0.10",
    "langchain-text-splitters==0.3.8",
    "langgraph>=0.2.0",
    "langgraph-checkpoint==2.0.26",
    "langgraph-checkpoint-postgres==2.0.21",
    "langsmith==0.3.34",
    "langchain-anthropic>=0.1.0",
    
    # OpenAI and Azure OpenAI
    "openai==1.82.1",
    
    # ChromaDB for vector search
    "chromadb>=0.4.18",
    
    # Cohere for reranking
    "cohere==5.15.0",
    
    # PostgreSQL database
    "psycopg[binary,pool]>=3.1.13",
    "psycopg-pool==3.2.6",
    "SQLAlchemy>=2.0.23",
    "asyncpg>=0.29.0",
    "alembic==1.15.2",
    
    # Authentication
    "authlib==1.5.2",
    "PyJWT[crypto]>=2.8.0",
    "python-jose[cryptography]>=3.3.0",
    
    # Essential utilities
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "tqdm==4.67.1",
    
    # Google Drive download
    "gdown>=5.0.0",
    
    # Data processing
    "pandas>=2.1.3",
    "numpy>=1.25.2",
    "openpyxl==3.1.5",
    "pyjstat==2.4.0",
    
    # PDF Processing - LlamaParse only
    "llama-parse>=0.4.0",  # Premium LLM-based parser (requires API key)
    
    # JSON/serialization
    "orjson>=3.9.10",
    "PyYAML==6.0.2",
    
    # MCP server
    "mcp==1.9.2",
    
    # Async utilities
    "aiofiles==24.1.0",
    "anyio==4.9.0",
    
    # Text processing
    "tiktoken==0.9.0",
    "rank-bm25>=0.2.2",
    
    # HTTP and networking
    "httpx==0.28.1",
    "httpcore==1.0.9",
    "certifi==2025.1.31",
    "charset-normalizer==3.4.1",
    "idna==3.10",
    "h11==0.16.0",
    
    # Templates
    "Jinja2==3.1.6",
    "MarkupSafe==3.0.2",
    
    # Type checking
    "typing_extensions",
]

[project.optional-dependencies]
dev = [
    # Jupyter/IPython support for development
    "ipykernel>=6.25.0",
    "jupyter>=1.0.0", 
    "notebook>=6.5.0",
    "ipython>=8.0.0",
    
    # Development and monitoring utilities
    "psutil>=5.9.0",

    # Graphs
    "graphviz",

    # Testing
    "pytest",
    "httpx"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["api*", "tests*", "my_agent*", "data*", "metadata*", "checkpointer*"]

[tool.setuptools.package-data]
"*" = ["*.py", "*.txt", "*.md", "*.json", "*.yaml", "*.yml", "*.toml", "*.cfg", "*.ini"]
